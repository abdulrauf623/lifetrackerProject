{"ast":null,"code":"const express = require(\"express\");\n\nconst router = express.Router();\n\nconst User = require(\"../models/users\");\n\nconst {\n  createUserJWT\n} = require(\"../utils/tokens\"); // middleware that is specific to this router\n\n\nrouter.use((req, res, next) => {\n  console.log(\"Time: \", Date.now());\n  next();\n}); // define the home page route\n\nrouter.get(\"/\", (req, res) => {\n  res.send(\"Birds home page\");\n}); // define the about route\n\nrouter.get(\"/about\", (req, res) => {\n  res.send(\"About birds\");\n});\nrouter.post(\"/register\", async (req, res, next) => {\n  try {\n    const user = await User.register({ ...req.body,\n      isAdmin: false\n    });\n    const token = createUserJWT(user);\n    return res.status(201).json({\n      user,\n      token\n    });\n  } catch (error) {\n    next(error);\n  }\n});\nrouter.post(\"/login\", async (req, res, next) => {\n  try {\n    const user = await User.login(req.body);\n    const token = createUserJWT(user);\n    return res.status(200).json({\n      user,\n      token\n    });\n  } catch (error) {\n    next(error);\n  }\n});\nmodule.exports = router;","map":{"version":3,"names":["express","require","router","Router","User","createUserJWT","use","req","res","next","console","log","Date","now","get","send","post","user","register","body","isAdmin","token","status","json","error","login","module","exports"],"sources":["/Users/abdul.karim/lifetrackerProject/lifetracker-api/routes/auth.js"],"sourcesContent":["const express = require(\"express\");\nconst router = express.Router();\nconst User = require(\"../models/users\")\nconst {createUserJWT} = require(\"../utils/tokens\")\n\n// middleware that is specific to this router\nrouter.use((req, res, next) => {\n  console.log(\"Time: \", Date.now());\n  next();\n});\n// define the home page route\nrouter.get(\"/\", (req, res) => {\n  res.send(\"Birds home page\");\n});\n// define the about route\nrouter.get(\"/about\", (req, res) => {\n  res.send(\"About birds\");\n});\n\nrouter.post(\"/register\", async (req, res, next) => {\n  try {\n    const user = await User.register({ ...req.body, isAdmin: false });\n    const token = createUserJWT(user);\n    return res.status(201).json({ user, token });\n  } catch (error) {\n    next(error);\n  }\n});\n\nrouter.post(\"/login\", async (req, res, next) =>{\n\n  try {\n\n    const user = await User.login(req.body);\n    const token = createUserJWT(user);\n    return res.status(200).json({ user, token });\n  }\n\n  catch(error){\n    next(error)\n  }\n\n\n\n})\n\nmodule.exports = router;\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAR,EAAf;;AACA,MAAMC,IAAI,GAAGH,OAAO,CAAC,iBAAD,CAApB;;AACA,MAAM;EAACI;AAAD,IAAkBJ,OAAO,CAAC,iBAAD,CAA/B,C,CAEA;;;AACAC,MAAM,CAACI,GAAP,CAAW,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;EAC7BC,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBC,IAAI,CAACC,GAAL,EAAtB;EACAJ,IAAI;AACL,CAHD,E,CAIA;;AACAP,MAAM,CAACY,GAAP,CAAW,GAAX,EAAgB,CAACP,GAAD,EAAMC,GAAN,KAAc;EAC5BA,GAAG,CAACO,IAAJ,CAAS,iBAAT;AACD,CAFD,E,CAGA;;AACAb,MAAM,CAACY,GAAP,CAAW,QAAX,EAAqB,CAACP,GAAD,EAAMC,GAAN,KAAc;EACjCA,GAAG,CAACO,IAAJ,CAAS,aAAT;AACD,CAFD;AAIAb,MAAM,CAACc,IAAP,CAAY,WAAZ,EAAyB,OAAOT,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAA0B;EACjD,IAAI;IACF,MAAMQ,IAAI,GAAG,MAAMb,IAAI,CAACc,QAAL,CAAc,EAAE,GAAGX,GAAG,CAACY,IAAT;MAAeC,OAAO,EAAE;IAAxB,CAAd,CAAnB;IACA,MAAMC,KAAK,GAAGhB,aAAa,CAACY,IAAD,CAA3B;IACA,OAAOT,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;MAAEN,IAAF;MAAQI;IAAR,CAArB,CAAP;EACD,CAJD,CAIE,OAAOG,KAAP,EAAc;IACdf,IAAI,CAACe,KAAD,CAAJ;EACD;AACF,CARD;AAUAtB,MAAM,CAACc,IAAP,CAAY,QAAZ,EAAsB,OAAOT,GAAP,EAAYC,GAAZ,EAAiBC,IAAjB,KAAyB;EAE7C,IAAI;IAEF,MAAMQ,IAAI,GAAG,MAAMb,IAAI,CAACqB,KAAL,CAAWlB,GAAG,CAACY,IAAf,CAAnB;IACA,MAAME,KAAK,GAAGhB,aAAa,CAACY,IAAD,CAA3B;IACA,OAAOT,GAAG,CAACc,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;MAAEN,IAAF;MAAQI;IAAR,CAArB,CAAP;EACD,CALD,CAOA,OAAMG,KAAN,EAAY;IACVf,IAAI,CAACe,KAAD,CAAJ;EACD;AAIF,CAfD;AAiBAE,MAAM,CAACC,OAAP,GAAiBzB,MAAjB"},"metadata":{},"sourceType":"script"}