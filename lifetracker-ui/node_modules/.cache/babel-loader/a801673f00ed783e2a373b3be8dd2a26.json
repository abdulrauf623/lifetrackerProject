{"ast":null,"code":"const jwt = require(\"jsonwebtoken\");\n\nconst {\n  PORT,\n  SECRET_KEY\n} = require(\"../config\");\n\nconsole.log(\"secret key\", SECRET_KEY);\n\nconst generateToken = data => jwt.sign(data, SECRET_KEY, {\n  expiresIn: \"24h\"\n});\n\nconst createUserJWT = user => {\n  const payload = {\n    email: user.email,\n    isAdmin: user.isAdmin || false\n  };\n  return generateToken(payload);\n};\n\nconst validateToken = token => {\n  try {\n    const decoded = jwt.verify(token, SECRET_KEY);\n    return decoded;\n  } catch (err) {\n    return {};\n  }\n};\n\nconst testToken = () => {\n  const user = {\n    email: \"person@gmail.com\"\n  };\n  const token = generateToken(user);\n  console.log(\"Token\", token);\n  const validatedToken = validateToken(token);\n  console.log(\"validated token\", validatedToken);\n};\n\nmodule.exports = {\n  generateToken,\n  validateToken,\n  createUserJWT\n};","map":{"version":3,"names":["jwt","require","PORT","SECRET_KEY","console","log","generateToken","data","sign","expiresIn","createUserJWT","user","payload","email","isAdmin","validateToken","token","decoded","verify","err","testToken","validatedToken","module","exports"],"sources":["/Users/abdul.karim/lifetrackerProject/lifetracker-api/utils/tokens.js"],"sourcesContent":["const jwt = require(\"jsonwebtoken\");\n\nconst { PORT, SECRET_KEY } = require(\"../config\");\nconsole.log(\"secret key\", SECRET_KEY);\n\nconst generateToken = (data) =>\n  jwt.sign(data, SECRET_KEY, { expiresIn: \"24h\" });\n\nconst createUserJWT = (user) => {\n  const payload = {\n    email: user.email,\n    isAdmin: user.isAdmin || false,\n  };\n\n  return generateToken(payload);\n};\n\nconst validateToken = (token) => {\n  try {\n    const decoded = jwt.verify(token, SECRET_KEY);\n\n    return decoded;\n  } catch (err) {\n    return {};\n  }\n};\n\nconst testToken = () => {\n  const user = { email: \"person@gmail.com\" };\n\n  const token = generateToken(user);\n\n  console.log(\"Token\", token);\n\n  const validatedToken = validateToken(token);\n\n  console.log(\"validated token\", validatedToken);\n};\n\nmodule.exports = {\n  generateToken,\n  validateToken,\n  createUserJWT,\n};\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEA,MAAM;EAAEC,IAAF;EAAQC;AAAR,IAAuBF,OAAO,CAAC,WAAD,CAApC;;AACAG,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;;AAEA,MAAMG,aAAa,GAAIC,IAAD,IACpBP,GAAG,CAACQ,IAAJ,CAASD,IAAT,EAAeJ,UAAf,EAA2B;EAAEM,SAAS,EAAE;AAAb,CAA3B,CADF;;AAGA,MAAMC,aAAa,GAAIC,IAAD,IAAU;EAC9B,MAAMC,OAAO,GAAG;IACdC,KAAK,EAAEF,IAAI,CAACE,KADE;IAEdC,OAAO,EAAEH,IAAI,CAACG,OAAL,IAAgB;EAFX,CAAhB;EAKA,OAAOR,aAAa,CAACM,OAAD,CAApB;AACD,CAPD;;AASA,MAAMG,aAAa,GAAIC,KAAD,IAAW;EAC/B,IAAI;IACF,MAAMC,OAAO,GAAGjB,GAAG,CAACkB,MAAJ,CAAWF,KAAX,EAAkBb,UAAlB,CAAhB;IAEA,OAAOc,OAAP;EACD,CAJD,CAIE,OAAOE,GAAP,EAAY;IACZ,OAAO,EAAP;EACD;AACF,CARD;;AAUA,MAAMC,SAAS,GAAG,MAAM;EACtB,MAAMT,IAAI,GAAG;IAAEE,KAAK,EAAE;EAAT,CAAb;EAEA,MAAMG,KAAK,GAAGV,aAAa,CAACK,IAAD,CAA3B;EAEAP,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,KAArB;EAEA,MAAMK,cAAc,GAAGN,aAAa,CAACC,KAAD,CAApC;EAEAZ,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BgB,cAA/B;AACD,CAVD;;AAYAC,MAAM,CAACC,OAAP,GAAiB;EACfjB,aADe;EAEfS,aAFe;EAGfL;AAHe,CAAjB"},"metadata":{},"sourceType":"script"}